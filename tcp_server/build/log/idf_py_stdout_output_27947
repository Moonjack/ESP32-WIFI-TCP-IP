[1/5] cd /home/tamer/esp/tcp_server/build/esp-idf/esptool_py && /home/tamer/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/tamer/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/tamer/esp/tcp_server/build/partition_table/partition-table.bin /home/tamer/esp/tcp_server/build/tcp_server.bin
tcp_server.bin binary size 0xaf740 bytes. Smallest app partition is 0x100000 bytes. 0x508c0 bytes (31%) free.
[2/5] Performing build step for 'bootloader'
[1/1] cd /home/tamer/esp/tcp_server/build/bootloader/esp-idf/esptool_py && /home/tamer/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/tamer/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/tamer/esp/tcp_server/build/bootloader/bootloader.bin
Bootloader binary size 0x66c0 bytes. 0x940 bytes (8%) free.
[2/3] cd /home/tamer/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/tamer/esp/esp-idf -D "SERIAL_TOOL=/home/tamer/.espressif/python_env/idf5.1_py3.10_env/bin/python;;/home/tamer/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/tamer/esp/tcp_server/build -P /home/tamer/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 tcp_server.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.3
Serial port /dev/ttyUSB0
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 94:b9:7e:d9:f6:d8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000bffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26304 bytes to 16366...
Writing at 0x00001000... (100 %)
Wrote 26304 bytes (16366 compressed) at 0x00001000 in 0.8 seconds (effective 272.7 kbit/s)...
Hash of data verified.
Compressed 718656 bytes to 463792...
Writing at 0x00010000... (3 %)
Writing at 0x0001c35d... (6 %)
Writing at 0x00023385... (10 %)
Writing at 0x00028b37... (13 %)
Writing at 0x0003258c... (17 %)
Writing at 0x00037dbe... (20 %)
Writing at 0x0003d5a4... (24 %)
Writing at 0x00042aca... (27 %)
Writing at 0x00048330... (31 %)
Writing at 0x0004dc30... (34 %)
Writing at 0x00053523... (37 %)
Writing at 0x000592a8... (41 %)
Writing at 0x0005e914... (44 %)
Writing at 0x00063bad... (48 %)
Writing at 0x00068fe4... (51 %)
Writing at 0x0006e375... (55 %)
Writing at 0x0007391f... (58 %)
Writing at 0x000791e7... (62 %)
Writing at 0x0007edc3... (65 %)
Writing at 0x00084640... (68 %)
Writing at 0x0008a120... (72 %)
Writing at 0x000904c2... (75 %)
Writing at 0x00095e45... (79 %)
Writing at 0x0009e99f... (82 %)
Writing at 0x000a6b42... (86 %)
Writing at 0x000ad156... (89 %)
Writing at 0x000b2bf9... (93 %)
Writing at 0x000b877c... (96 %)
Writing at 0x000bd98c... (100 %)
Wrote 718656 bytes (463792 compressed) at 0x00010000 in 10.5 seconds (effective 545.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 444.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
